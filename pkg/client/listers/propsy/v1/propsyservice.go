/*
This file has been generated.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/seznam/ProPsy/pkg/apis/propsy/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ProPsyServiceLister helps list ProPsyServices.
type ProPsyServiceLister interface {
	// List lists all ProPsyServices in the indexer.
	List(selector labels.Selector) (ret []*v1.ProPsyService, err error)
	// ProPsyServices returns an object that can list and get ProPsyServices.
	ProPsyServices(namespace string) ProPsyServiceNamespaceLister
	ProPsyServiceListerExpansion
}

// proPsyServiceLister implements the ProPsyServiceLister interface.
type proPsyServiceLister struct {
	indexer cache.Indexer
}

// NewProPsyServiceLister returns a new ProPsyServiceLister.
func NewProPsyServiceLister(indexer cache.Indexer) ProPsyServiceLister {
	return &proPsyServiceLister{indexer: indexer}
}

// List lists all ProPsyServices in the indexer.
func (s *proPsyServiceLister) List(selector labels.Selector) (ret []*v1.ProPsyService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ProPsyService))
	})
	return ret, err
}

// ProPsyServices returns an object that can list and get ProPsyServices.
func (s *proPsyServiceLister) ProPsyServices(namespace string) ProPsyServiceNamespaceLister {
	return proPsyServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ProPsyServiceNamespaceLister helps list and get ProPsyServices.
type ProPsyServiceNamespaceLister interface {
	// List lists all ProPsyServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.ProPsyService, err error)
	// Get retrieves the ProPsyService from the indexer for a given namespace and name.
	Get(name string) (*v1.ProPsyService, error)
	ProPsyServiceNamespaceListerExpansion
}

// proPsyServiceNamespaceLister implements the ProPsyServiceNamespaceLister
// interface.
type proPsyServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ProPsyServices in the indexer for a given namespace.
func (s proPsyServiceNamespaceLister) List(selector labels.Selector) (ret []*v1.ProPsyService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ProPsyService))
	})
	return ret, err
}

// Get retrieves the ProPsyService from the indexer for a given namespace and name.
func (s proPsyServiceNamespaceLister) Get(name string) (*v1.ProPsyService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("propsyservice"), name)
	}
	return obj.(*v1.ProPsyService), nil
}
